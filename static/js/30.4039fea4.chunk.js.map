{"version":3,"sources":["components/body/search-page/searchPage.js"],"names":["connect","state","console","log","q","search","category","props","useState","products","setProducts","useEffect","a","db","collection","get","then","snapshot","docs","map","doc","push","data","id","length","fetchData","toUpperCase","split","filter","x","join","arrFilter","item","name","includes","hotdeal","className","style","fontWeight","textShadow"],"mappings":"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","file":"static/js/30.4039fea4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./../../../common/style.css\";\r\nimport SearchItem from \"./searchItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { db } from \"../../../firebase\";\r\n\r\nfunction SearchPage(props) {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let products = [];\r\n      await db\r\n        .collection(\"products\")\r\n        .get()\r\n        .then((snapshot) =>\r\n          snapshot.docs.map((doc) => {\r\n            products.push({ ...doc.data(), id: doc.id });\r\n            return true;\r\n          })\r\n        );\r\n      if (products.length > 0) {\r\n        setProducts([...products]);\r\n      } else setProducts([]);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const q = props.q\r\n      .toUpperCase()\r\n      .split(\" \")\r\n      .filter((x) => x !== \"\")\r\n      .join(\"\");\r\n    const category = props.category;\r\n    let arrFilter = [];\r\n    const fetchData = async () => {\r\n      if (category === \"all\") {\r\n        let data = [];\r\n        await db\r\n          .collection(\"products\")\r\n          .get()\r\n          .then((snapshot) =>\r\n            snapshot.docs.map((doc) => {\r\n              data.push({ ...doc.data(), id: doc.id });\r\n              return true;\r\n            })\r\n          );\r\n        if (data.length > 0) {\r\n          data.filter((item) => {\r\n            let charName = item.name\r\n              .toUpperCase()\r\n              .split(\" \")\r\n              .filter((x) => x !== \"\")\r\n              .join(\"\");\r\n            if (charName.includes(q)) arrFilter.push(item);\r\n            return [...arrFilter];\r\n          });\r\n          setProducts(arrFilter);\r\n        } else setProducts([]);\r\n      } else if (category === \"hotdeal\") {\r\n        let data = [];\r\n        await db\r\n          .collection(\"products\")\r\n          .get()\r\n          .then((snapshot) =>\r\n            snapshot.docs.map((doc) => {\r\n              if (doc.data().hotdeal === true) {\r\n                data.push({ ...doc.data(), id: doc.id });\r\n              }\r\n              return true;\r\n            })\r\n          );\r\n        if (data.length > 0) {\r\n          data.filter((item) => {\r\n            let charName = item.name\r\n              .toUpperCase()\r\n              .split(\" \")\r\n              .filter((x) => x !== \"\")\r\n              .join(\"\");\r\n            if (charName.includes(q)) arrFilter.push(item);\r\n            return [...arrFilter];\r\n          });\r\n          setProducts(arrFilter);\r\n        } else setProducts([]);\r\n      } else {\r\n        let data = [];\r\n        await db\r\n          .collection(\"products\")\r\n          .get()\r\n          .then((snapshot) =>\r\n            snapshot.docs.map((doc) => {\r\n              if (doc.data().category === category) {\r\n                data.push({ ...doc.data(), id: doc.id });\r\n              }\r\n              return true;\r\n            })\r\n          );\r\n        if (data.length > 0) {\r\n          data.filter((item) => {\r\n            let charName = item.name\r\n              .toUpperCase()\r\n              .split(\" \")\r\n              .filter((x) => x !== \"\")\r\n              .join(\"\");\r\n            if (charName.includes(q)) arrFilter.push(item);\r\n            return [...arrFilter];\r\n          });\r\n          setProducts(arrFilter);\r\n        } else setProducts([]);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2\r\n            className=\"text-uppercase my-4\"\r\n            style={{\r\n              fontWeight: \"600\",\r\n              textShadow: \"4px 4px 7px rgba(150, 152, 150, 1)\",\r\n            }}\r\n          >\r\n            Results\r\n          </h2>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <div className=\"hotdeal\">\r\n            <SearchItem products={products} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state\", state);\r\n  return {\r\n    q: state.search.q,\r\n    category: state.search.category,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(SearchPage);\r\n"],"sourceRoot":""}